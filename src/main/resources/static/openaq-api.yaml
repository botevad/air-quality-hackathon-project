openapi: 3.0.1
info:
  title: Open AQ Platform API
  description: An API for open air quality data.
  version: 1.1.0
servers:
  - url: /
paths:
  /beta/averages:
    get:
      tags:
        - Averages
      summary: '(!!BETA!!) Provides averages across specified spatial and temporal
        resolutions. NOTE: Because the endpoint is in beta, it has limited functionality,
        functionality may change, and there may be bugs. Learn more and give feedback:
        github.com/openaq/openaq-averaging.'
      parameters:
        - name: spatial
          in: query
          description: Indicate spatial resolution for calculated average.
          required: true
          schema:
            type: string
        - name: temporal
          in: query
          description: Indicate temporal resolution for calculated average.
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: Limit results by a certain country.
          schema:
            type: string
        - name: city
          in: query
          description: Limit results by a certain city.
          schema:
            type: string
        - name: location
          in: query
          description: Limit results by a certain location.
          schema:
            type: string
        - name: parameter
          in: query
          description: 'Limit to certain one or more parameters. (ex. parameter=pm25
          or parameter[]=co&amp;parameter[]=pm25) Note: Currently only works for pm25.'
          schema:
            type: string
        - name: date_from
          in: query
          description: Show results after a certain date (in utc). (ex. 2015, or 2015-12-20)
          schema:
            type: string
        - name: date_to
          in: query
          description: Show results before a certain date (in utc). (ex. 2015-12-20,
            or 2015-12-20)
          schema:
            type: string
        - name: order_by
          in: query
          description: Order by one or more fields. (ex. order_by=date or order_by[]=value&amp;order_by[]=parameter).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results. Max is set at 100.
          schema:
            type: number
        - name: format
          in: query
          description: Format for data return. Note that csv will return a max of 65,536
            results when no limit is set.
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Averages'
  /v1/cities:
    get:
      tags:
        - Cities
      summary: Provides a simple listing of cities within the platform.
      parameters:
        - name: country
          in: query
          description: Limit results by a certain country.
          schema:
            type: string
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=country or order_by[]=country&amp;order_by[]=locations).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results.
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'

  /v1/countries:
    get:
      tags:
        - Countries
      summary: Provides a simple listing of countries within the platform.
      parameters:
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=cities or order_by[]=cities&amp;order_by[]=locations).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results.
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'

  /v1/fetches:
    get:
      tags:
        - Fetches
      summary: Providing data about individual fetch operations that are used to populate
        data in the platform.
      parameters:
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=timeEnded or order_by[]=timeEnded&amp;order_by[]=count).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results.
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetV1Fetches'

  /v1/latest:
    get:
      tags:
        - Latest
      summary: Provides the latest value of each available parameter for every location
        in the system.
      parameters:
        - name: city
          in: query
          description: Limit results by a certain city.
          schema:
            type: string
        - name: country
          in: query
          description: Limit results by a certain country.
          schema:
            type: string
        - name: location
          in: query
          description: Limit results by a certain location.
          schema:
            type: string
        - name: parameter
          in: query
          description: Limit to only a certain parameter.
          schema:
            type: string
        - name: has_geo
          in: query
          description: Filter out items that have or do not have geographic information.
          schema:
            type: boolean
        - name: coordinates
          in: query
          description: Center point (lat, lon) used to get measurements within a certain
            area. (ex. coordinates=40.23,34.17) Will add distance property.
          schema:
            type: string
        - name: radius
          in: query
          description: Radius (in meters) used to get measurements within a certain
            area, must be used with coordinates.
          schema:
            type: number
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=country or order_by[]=country&amp;order_by[]=city).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results.
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurements'

  /v1/locations:
    get:
      tags:
        - Locations
      summary: Provides a list of measurement locations and their meta data.
      parameters:
        - name: city
          in: query
          description: Limit results by one or more cities (ex. city[]=Lisboa&amp;city[]=Porto)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: country
          in: query
          description: Limit results by one or more countries (ex. country[]=NL&amp;country[]=PL)
          schema:
            type: string
        - name: location
          in: query
          description: Limit results by one or more locations (ex. location[]=Reja&amp;location[]=Nijmegen-Graafseweg)
          schema:
            type: string
        - name: parameter
          in: query
          description: Limit to certain one or more parameters (ex. parameter=pm25 or
            parameter[]=co&amp;parameter[]=pm25)
          schema:
            type: string
        - name: has_geo
          in: query
          description: Filter out items that have or do not have geographic information.
          schema:
            type: boolean
        - name: coordinates
          in: query
          description: Center point (lat, lon) used to get locations within/near a certain
            area. (ex. coordinates=40.23,34.17). Must be used with order_by=distance
            or radius=2500, otherwise won't affect query.
          schema:
            type: string
        - name: radius
          in: query
          description: Radius (in meters) used to get locations within a certain area,
            must be used with coordinates.
          schema:
            type: number
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=count or order_by[]=country&amp;order_by[]=count).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results.
          schema:
            type: number
        - name: siteType
          in: query
          description: Filter by metadata property &quot;site type&quot;. Supports one
            or more values.
          schema:
            type: string
        - name: activationDate
          in: query
          description: 'Filter by metadata property &quot;activation date&quot;. Has
          to be a range with a start and end. (ex: activationDate[]=2019/01/01&amp;activationDate[]=2019/01/05)'
          schema:
            type: string
            format: date
        - name: completeness
          in: query
          description: 'Filter by metadata completeness. Has to be a range with a start
          and end bewtween 0 and 1. (ex: completeness[]=0.9&amp;completeness[]=1)'
          schema:
            type: number
        - name: inletHeight
          in: query
          description: 'Filter by metadata property &quot;inlet height&quot;. Has to
          be a range with a start and end. (ex: inletHeight[]=1&amp;inletHeight[]=12)'
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurements'

  /v1/locations/{id}:
    get:
      tags:
        - Locations
      summary: Provides data on a specific location
      parameters:
        - name: id
          in: path
          description: Location ID.
          required: true
          schema:
            type: boolean
        - name: metadata
          in: query
          description: Whether or not to send the location metadata.
          schema:
            type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurements'

  /v1/measurements:
    get:
      tags:
        - Measurements
      summary: Provides data about individual measurements
      parameters:
        - name: country
          in: query
          description: Limit results by a certain country.
          schema:
            type: string
        - name: city
          in: query
          description: Limit results by a certain city.
          schema:
            type: string
        - name: location
          in: query
          description: Limit results by a certain location.
          schema:
            type: string
        - name: parameter
          in: query
          description: Limit to certain one or more parameters (ex. parameter=pm25 or
            parameter[]=co&amp;parameter[]=pm25)
          schema:
            type: string
        - name: has_geo
          in: query
          description: Filter out items that have or do not have geographic information.
          schema:
            type: boolean
        - name: coordinates
          in: query
          description: Center point (lat, lon) used to get measurements within a certain
            area. (ex. coordinates=40.23,34.17)
          schema:
            type: string
        - name: radius
          in: query
          description: Radius (in meters) used to get measurements within a certain
            area, must be used with coordinates.
          schema:
            type: number
        - name: value_from
          in: query
          description: Show results above value threshold, useful in combination with
            parameter.
          schema:
            type: number
        - name: value_to
          in: query
          description: Show results below value threshold, useful in combination with
            parameter.
          schema:
            type: number
        - name: date_from
          in: query
          description: Show results after a certain date. This acts on the utc timestamp
            of each measurement. (ex. 2015-12-20, or 2015-12-20T09:00:00)
          schema:
            type: string
        - name: date_to
          in: query
          description: Show results before a certain date. This acts on the utc timestamp
            of each measurement. (ex. 2015-12-20, or 2015-12-20T09:00:00)
          schema:
            type: string
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=date or order_by[]=value&amp;order_by[]=parameter).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: include_fields
          in: query
          description: Include extra fields in the output in addition to default values.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results. Max is set at 100.
          schema:
            type: number
        - name: format
          in: query
          description: Format for data return. Note that csv will return a max of 65,536
            results when no limit is set.
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurements'

  /v1/parameters:
    get:
      tags:
        - Parameters
      summary: Provides a simple listing of parameters within the platform.
      parameters:
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=name or order_by[]=preferredUnit&amp;order_by[]=id).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parameter'
  /v1/sources:
    get:
      tags:
        - Sources
      summary: Provides a list of data sources.
      parameters:
        - name: order_by
          in: query
          description: Order by one or more fields (ex. order_by=country or order_by[]=active&amp;order_by[]=country).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Define sort order for one or more fields (ex. sort=desc or sort[]=asc&amp;sort[]=desc).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Change the number of results returned, max is 10000.
          schema:
            type: number
        - name: page
          in: query
          description: Paginate through results.
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'

components:
  schemas:
    Averages:
      required:
        - average
        - city
        - coordinates
        - country
        - date
        - location
        - measurement_count
        - parameter
        - spatial
        - temporal
      type: object
      properties:
        spatial:
          type: string
          description: Indicate spatial resolution for calculated average.
        temporal:
          type: string
          description: Indicate temporal resolution for calculated average.
        country:
          type: string
          description: Country for calculated average in 2 letter ISO code
        city:
          type: string
          description: City for calculated average
        location:
          type: string
          description: Location for calculated average
        parameter:
          type: string
          description: Parameter for calculated average for
        date_from:
          type: string
          description: Show results after a certain date (in utc). (ex. 2015, or 2015-12-20)
        date_to:
          type: string
          description: Show results before a certain date (in utc). (ex. 2015-12-20,
            or 2015-12-20)
        order_by:
          type: array
          description: Order by one or more fields. (ex. order_by=date or order_by[]=value&amp;order_by[]=parameter).
          items:
            type: string
        sort:
          type: array
          description: Define sort order for one or more fields (ex. sort=desc or
            sort[]=asc&amp;sort[]=desc).
          items:
            type: string
        limit:
          type: number
          description: Change the number of results returned, max is 10000.
        page:
          type: number
          description: Paginate through results. Max is set at 100.
        format:
          type: string
          description: Format for data return. Note that csv will return a max of
            65,536 results when no limit is set.
        coordinates:
          type: object
          properties: {}
          description: Latitude and longitude for calculated average
        date:
          type: object
          properties: {}
          description: Date and time for calculated average in UTC
        average:
          type: number
          description: Calculated average
        measurement_count:
          type: number
          description: Number of measurements used to calculate average

    Location:
      required:
        - city
        - count
        - country
        - locations
        - name
      type: object
      properties:
        country:
          type: string
          description: Country containing city, in 2 letter ISO code

        name:
          type: string
          description: Name of the city
        city:
          type: string
          description: 'Name of the city (DEPRECATED: use &quot;name&quot; instead)'
        count:
          type: number
          description: Number of measurements for this city
        locations:
          type: number
          description: Number of locations in this city

    GetV1Fetches:
      required:
        - count
        - results
        - timeEnded
        - timeStarted
      type: object
      properties:
        order_by:
          type: array
          description: Order by one or more fields (ex. order_by=timeEnded or order_by[]=timeEnded&amp;order_by[]=count).
          items:
            type: string
        sort:
          type: array
          description: Define sort order for one or more fields (ex. sort=desc or
            sort[]=asc&amp;sort[]=desc).
          items:
            type: string
        limit:
          type: number
          description: Change the number of results returned, max is 10000.
        page:
          type: number
          description: Paginate through results.
        timeStarted:
          type: string
          description: Start time of fetch task in UTC
          format: datetime
        timeEnded:
          type: string
          description: End time of fetch task in UTC
          format: datetime
        count:
          type: number
          description: Count of new, inserted measurements
        results:
          type: object
          properties: {}
          description: JSON containing metadata for each source fetch task

    Measurements:
      required:
        - city
        - coordinates
        - count
        - country
        - distance
        - firstUpdated
        - lastUpdated
        - location
        - metadata
        - metadataCompleteness
        - metadataUpdatedAt
        - metadataUserId
        - metadataVersion
        - parameters
        - sourceName
        - sourceNames
      type: object
      properties:
        city:
          type: string
          description: City containing location
        country:
          type: string
          description: Country containing location in 2 letter ISO code
        location:
          type: string
          description: Location identifier
        coordinates:
          type: object
          properties: {}
          description: Coordinates of location
        count:
          type: number
          description: Number of measurements, cumulative by specificity level
        distance:
          type: number
          description: Distance to the specified coordinates (available when coordinates
            parameter is used, measured by meters)
        sourceName:
          type: string
          description: Can follow this to determine active adapter used for this location
        sourceNames:
          type: array
          items:
            type: string
          description: Array of sourceName, both active and unused ones
        firstUpdated:
          type: string
          description: When was data first grabbed for this location (in UTC)?
          format: date
        lastUpdated:
          type: string
          description: When was data last grabbed for this location (in UTC)?
          format: date
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: List of parameters present for this location
        metadata:
          type: object
          properties: {}
          description: Metadata of this location if metadata flag was provided.
        metadataVersion:
          type: string
          description: Metadata version of this location if metadata flag was provided.
        metadataUserId:
          type: string
          description: Last metadata author if metadata flag was provided.
        metadataUpdatedAt:
          type: string
          description: Last metadata update time if metadata flag was provided.
        metadataCompleteness:
          type: number
          description: Metadata completeness for this location if metadata flag was
            provided.

    Parameter:
      required:
        - description
        - id
        - name
        - preferredUnit
      type: object
      properties:
        id:
          type: string
          description: Parameter ID
        name:
          type: string
          description: The parameter name
        description:
          type: number
          description: A description of the parameter
        preferredUnit:
          type: number
          description: The parameter's preferred unit

    Source:
      required:
        - active
        - adapter
        - city
        - contacts
        - country
        - description
        - name
        - resolution
        - sourceURL
        - url
      type: object
      properties:
        url:
          type: string
          description: The actual data source URL
        adapter:
          type: string
          description: Name of adapter that collects data from source
        name:
          type: string
          description: Source name
        city:
          type: string
          description: City where data is gathered
        country:
          type: string
          description: Country where data is gathered
        description:
          type: string
          description: Description of the data source
        resolution:
          type: string
          description: Source update frequency (deprecated)
        sourceURL:
          type: string
          description: A related URL about the source
        contacts:
          type: array
          description: Addresses you may send inquiries about the source
          items:
            type: string
        active:
          type: boolean
          description: Whether the source is used at this time
